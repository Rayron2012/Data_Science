# -*- coding: utf-8 -*-
"""Introdução a Estatística.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BDDSEaWtOogZLv-Gjr1m0zSSc3jGgtG5

# Estatística
- Arquivo de apoio para a apresentação
"""

# !pip install ipywidgets

import pandas as pd 
import numpy as np
import ipywidgets as widgets
import matplotlib.pyplot as plt
from scipy import stats

"""# A importância da estatística descritiva"""

salarios = {
    "pessoas": ['Jorge','Pedro','Marina','Renato','Bia','Renata','Yasmin','Lucas','Pablo','Glaucia','Maria','Gabriel'],
    "salarios": [3,5,4,2,5.5,4.7,4.2,2.4,3.3,9.8,2.2,4.7]       
}

salarios = pd.DataFrame(salarios)

print('média: ' + str(salarios.salarios.mean()))
print('mediana: ' + str(salarios.salarios.median()))
print('moda: ' + str(salarios.salarios.mode()[0]))

salarios.salarios.hist();

"""# Tabela de frequência e histograma"""

base_alunos = {
    "id_aluno": [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],
    "idades": [16,16,16,16,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,19,21]
}

base_alunos = pd.DataFrame(base_alunos)

print(pd.crosstab(index=base_alunos.idades,columns="contagem"))

base_alunos.idades.hist();

"""# Média, mediana e moda"""

base = {
    "valores": [5,7,9,100]
}

base = pd.DataFrame(base)

print(base.mean())

base = {
    "valores": [5,7,9,100]
}

base = pd.DataFrame(base)

print(base.median())

"""## Analisando as avaliações de uma empresa"""

notas = np.array([1,1,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,8,8,8,9,9,9])

np.unique(notas,return_counts=True)

#                 1 2 3 4 5 6 7 8 9 1011  
notas2 = np.array([5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6])

print(np.median(notas2))
print(np.mean(notas2))
print(len(notas2))

valores = np.unique(notas,return_counts=True)[0]
contagem = np.unique(notas,return_counts=True)[1]

media_inicial = np.mean(notas)
mediana_inicial = np.median(notas)


print('média: ' + str(media_inicial))
print('mediana: ' + str(mediana_inicial))

plt.bar(x=valores,height=contagem);
plt.axvline(x=media_inicial, color='g', linestyle='-');
plt.axvline(x=mediana_inicial, color='r', linestyle='-');

"""### Como novos valores alteram a média e a mediana"""

notas = np.array([1,1,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,8,8,8,9,9,9])

def plot_grafico(quantidade,valor):
    
    novo_notas = notas
    while quantidade > 0:
        novo_notas = np.append(novo_notas,valor)
        quantidade -= 1
        
    valores = np.unique(novo_notas,return_counts=True)[0]
    contagem = np.unique(novo_notas,return_counts=True)[1]

    media = np.mean(novo_notas)
    mediana = np.median(novo_notas)

    plt.bar(x=valores,height=contagem);
    plt.axvline(x=media, color='g', linestyle='-')
    plt.axvline(x=mediana, color='r', linestyle='-')
    
    print('média: ' + str(round(media,2)) + ' / média inicial: ' + str(round(media_inicial,2)))
    print('mediana: ' + str(mediana) + ' / mediana inicial: ' + str(mediana_inicial))

widgets.interact_manual(plot_grafico,quantidade=widgets.IntSlider(min=0, max=100,value=0),valor=(0,100));

"""### (Explicando os conceitos de média e mediana)"""

notas = np.array([1,1,2,2,3])
media_inicial = np.mean(notas)
mediana_inicial = np.median(notas)

widgets.interact_manual(plot_grafico,quantidade=widgets.IntSlider(min=0, max=100,value=0),valor=(0,100));

"""### Analisando também a moda"""

notas = np.array([1,1,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,8,8,8,9,9,9])

media_inicial = np.mean(notas)
mediana_inicial = np.median(notas)
moda_inicial = stats.mode(notas).mode[0]

def plot_grafico2(quantidade,valor):
    
    novo_notas = notas
    while quantidade > 0:
        novo_notas = np.append(novo_notas,valor)
        quantidade -= 1
        
    valores = np.unique(novo_notas,return_counts=True)[0]
    contagem = np.unique(novo_notas,return_counts=True)[1]

    media = np.mean(novo_notas)
    mediana = np.median(novo_notas)
    moda = stats.mode(novo_notas)

    plt.bar(x=valores,height=contagem);
    plt.axvline(x=media, color='g', linestyle='-')
    plt.axvline(x=mediana, color='r', linestyle='-')
    plt.axvline(x=moda.mode[0], color='y', linestyle='-')
    
    print('média: ' + str(round(media,2)) + ' / média inicial: ' + str(round(media_inicial,2)))
    print('mediana: ' + str(mediana) + ' / mediana inicial: ' + str(mediana_inicial))
    print('moda: ' + str(moda.mode[0]) + ' / moda inicial: ' + str(moda_inicial))

widgets.interact_manual(plot_grafico2,quantidade=widgets.IntSlider(min=0, max=100,value=0),valor=(0,100));

"""### (Explicando os conceitos de média, mediana e moda)"""

notas = np.array([1,1,1,2,2,3])
media_inicial = np.mean(notas)
mediana_inicial = np.median(notas)
moda_inicial = stats.mode(notas).mode[0]

widgets.interact_manual(plot_grafico2,quantidade=widgets.IntSlider(min=0, max=10,value=0),valor=(0,10));

"""# Usando média, mediana e moda para avaliar produtos"""

# Importando a base do excel
base = pd.read_csv("10. Introdução à Estatística.csv")
base = base.drop(["Unnamed: 0"],axis=1)

display(base)

base.mean()

base_resumo = pd.DataFrame()
base_resumo['produtos'] = base.columns
base_resumo['média'] = base.mean().values
base_resumo

base_resumo['mediana'] = base.median().values
base_resumo['moda'] = base.mode().iloc[0].values
base_resumo

base_resumo['registros'] = base.count().values
base_resumo['mínimo'] = base.min().values
base_resumo['máximo'] = base.max().values
base_resumo

"""## Considerando um exemplo sem um limite de range"""

# Base de salários de 13 pessoas
empresa1 = {
    'assistente1': 1000,
    'assistente2': 1080,
    'analista1': 1500,
    'analista2': 1520,
    'analista3': 1600,
    'analista4': 1670,
    'coordenador1': 2640,
    'coordenador2': 2730,
    'coordenador3': 2710,
    'gerente1': 5000,
    'gerente2': 5000,
    'CEO': 57000
}

empresa2 = {
    'assistente1': 3000,
    'assistente2': 3000,
    'analista1': 4200,
    'analista2': 4200,
    'analista3': 4200,
    'analista4': 4200,
    'coordenador1': 6000,
    'coordenador2': 6000,
    'coordenador3': 6000,
    'gerente1': 8000,
    'gerente2': 8000,
    'CEO': 15000
}

empresa1 = pd.DataFrame(empresa1.items(), columns=['Cargo', 'Salário'])
empresa2 = pd.DataFrame(empresa2.items(), columns=['Cargo', 'Salário'])

base_resumo = pd.DataFrame()
base_resumo['empresas'] = [1,2]
base_resumo['média'] = [round(empresa1.Salário.mean(),1),round(empresa2.Salário.mean(),1)]
base_resumo['mediana'] = [round(empresa1.Salário.median(),1),round(empresa2.Salário.median(),1)]
base_resumo['moda'] = [round(empresa1.Salário.mode()[0],1),round(empresa2.Salário.mode()[0],1)]
base_resumo['registros'] = [round(empresa1.Salário.count(),1),round(empresa2.Salário.count(),1)]
base_resumo['mínimo'] = [round(empresa1.Salário.min(),1),round(empresa2.Salário.min(),1)]
base_resumo['máximo'] = [round(empresa1.Salário.max(),1),round(empresa2.Salário.max(),1)]
base_resumo

# Base de salários de 13 pessoas
salarios = {
    'funcionario': [1,2,3,4,5,6,7,8,9,10,11,12],
    'cargos': ['assistente1','assistente2','analista1','analista2','analista3','analista4','coordenador1','coordenador2','coordenador3','gerente1','gerente2','CEO'],
    'empresa1': [1000,1080,1500,1520,1600,1670,2640,2730,2710,5000,5000,57000],
    'empresa2': [3000,3000,4200,4200,4200,4200,6000,6000,6000,8000,8000,15000]
}

salarios = pd.DataFrame(salarios)

salarios.empresa2.plot();
salarios.empresa1.plot();

# Base de salários de 13 pessoas
salarios = {
    'funcionario': [1,2,3,4,5,6,7,8,9,10,11],
    'cargos': ['assistente1','assistente2','analista1','analista2','analista3','analista4','coordenador1','coordenador2','coordenador3','gerente1','gerente2'],
    'empresa1': [1000,1080,1500,1520,1600,1670,2640,2730,2710,5000,5000],
    'empresa2': [3000,3000,4200,4200,4200,4200,6000,6000,6000,8000,8000]
}

salarios = pd.DataFrame(salarios)

salarios.empresa2.plot();
salarios.empresa1.plot();

"""### (Entendendo a relação entre média, mediana e moda)"""

def ajustes_grafico(n1=0,n2=0,n3=0,n4=0,n5=0,n6=0,n7=0,n8=0,n9=0):
    
    novo_notas = notas
        
    novo_notas = np.append(novo_notas,np.repeat(1,n1))
    novo_notas = np.append(novo_notas,np.repeat(2,n2))
    novo_notas = np.append(novo_notas,np.repeat(3,n3))
    novo_notas = np.append(novo_notas,np.repeat(4,n4))
    novo_notas = np.append(novo_notas,np.repeat(5,n5))
    novo_notas = np.append(novo_notas,np.repeat(6,n6))
    novo_notas = np.append(novo_notas,np.repeat(7,n7))
    novo_notas = np.append(novo_notas,np.repeat(8,n8))
    novo_notas = np.append(novo_notas,np.repeat(9,n9))
        
    valores = np.unique(novo_notas,return_counts=True)[0]
    contagem = np.unique(novo_notas,return_counts=True)[1]

    media = np.mean(novo_notas)
    mediana = np.median(novo_notas)
    moda = stats.mode(novo_notas)

    plt.bar(x=valores,height=contagem);
    plt.axvline(x=media, color='g', linestyle='-')
    plt.axvline(x=mediana, color='r', linestyle='-')
    plt.axvline(x=moda.mode[0], color='y', linestyle='-')
    
    print('registros: '+ str(len(novo_notas)))
    print('média: ' + str(round(media,2)) + ' / média inicial: ' + str(round(media_inicial,2)))
    print('mediana: ' + str(mediana) + ' / mediana inicial: ' + str(mediana_inicial))
    print('moda: ' + str(moda.mode[0]) + ' / moda inicial: ' + str(moda_inicial))

widgets.interact_manual(ajustes_grafico,n1=(0,40),n2=(0,40),n3=(0,40),n4=(0,40),n5=(0,40),n6=(0,40), \
                        n7=(0,40),n8=(0,40),n9=(0,40));

